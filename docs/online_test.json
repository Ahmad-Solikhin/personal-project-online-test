{
  "openapi": "3.0.3",
  "info": {
    "title": "Online Test RESTful API",
    "version": "1",
    "description": "OpenAPI for personal project Online Test RESTful API"
  },
  "servers": [
    {
      "description": "Online Test RESTful API Server",
      "url": "https://localhost:8080/api/{version}",
      "variables": {
        "version": {
          "default": "v1",
          "enum": [
            "v1"
          ]
        }
      }
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register",
        "description": "Register to create new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              },
              "examples": {
                "Success": {
                  "description": "Example John Doe register",
                  "value": {
                    "name": "John Doe",
                    "email": "johndoe@gmail.com",
                    "password": "secret123",
                    "retype_password": "secret123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success register",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "examples": {
                  "Success": {
                    "description": "Success register",
                    "value": {
                      "message": "Success register new account, check your email",
                      "status": 201
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request register",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "examples": {
                  "Bad request": {
                    "description": "Bad request register",
                    "value": {
                      "message": {
                        "name": "name cannot be blank",
                        "email": "wrong format email",
                        "password": "password must longer or equals to 8"
                      },
                      "status": 400
                    }
                  },
                  "Email already exist": {
                    "description": "Email already used",
                    "value": {
                      "message": {
                        "email": "email already used"
                      },
                      "status": 400
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "description": "Login with existing user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              },
              "examples": {
                "Success": {
                  "description": "Example John Doe login",
                  "value": {
                    "email": "johndoe@gmail.com",
                    "password": "secret123"
                  }
                },
                "Bad request": {
                  "description": "Example bad request login",
                  "value": {
                    "email": "",
                    "password": ""
                  }
                },
                "Not found": {
                  "description": "Example not found login",
                  "value": {
                    "email": "notfound@gmail.com",
                    "password": "idon'tevenknow"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "examples": {
                  "Success": {
                    "description": "Success login",
                    "value": {
                      "message": "Success login",
                      "status": 200,
                      "data": {
                        "token": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjYW5kaWRhdGVAZ21haWwuY29tIiwiYXV0aG9yaXRpZXMiOlt7ImF1dGhvcml0eSI6ImFwcGxpY2FudCJ9XSwiaWF0IjoxNjkwMTgzMjM4LCJleHAiOjE2OTAxOTA0Mzh9.tu4QHbXYATul_fbzmlKTG6n3cDZY21c-AA8Qw0slKf8"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failed login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "examples": {
                  "Bad Request": {
                    "description": "Bad request",
                    "value": {
                      "message": {
                        "email": "email cannot be blank",
                        "password": "password cannot be blank"
                      },
                      "status": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Failed login",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "examples": {
                  "Not Found": {
                    "description": "Not found",
                    "value": {
                      "message": "email or password is wrong",
                      "status": 404
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/verify-email": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Verify email",
        "description": "Verify email to enable new registered account",
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          }
        ],
        "responses": {
          "200": {
            "description": "Success verify email",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "examples": {
                  "Success": {
                    "description": "Success verify email",
                    "value": {
                      "message": "Success verify email",
                      "status": 200
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "examples": {
                  "Not found": {
                    "description": "Account not found",
                    "value": {
                      "message": "Account not found",
                      "status": 404
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/resend-verify-email": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Resend email verification",
        "description": "Update token in table user verify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequest"
              },
              "examples": {
                "Success": {
                  "description": "Success resend email verification",
                  "value": {
                    "email": "johndoe@gmail.com"
                  }
                },
                "Bad request": {
                  "description": "Bad request resend email verification",
                  "value": {
                    "email": ""
                  }
                },
                "Not found": {
                  "description": "Account not found",
                  "value": {
                    "email": "emailnotdefined@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success resend email verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "examples": {
                  "Success": {
                    "description": "Success resend email verification",
                    "value": {
                      "message": "Success resend email verification",
                      "status": 200
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request resend email verification",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "examples": {
                  "Bad request": {
                    "description": "Bad request resend email verification",
                    "value": {
                      "message": {
                        "email": "email cannot be blank"
                      },
                      "status": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "examples": {
                  "Bad request": {
                    "description": "Account not found",
                    "value": {
                      "message": "Account not found",
                      "status": 404
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/forgot-password": {
      "put": {
        "tags": [
          "Authentication"
        ],
        "summary": "Send email forgot password",
        "description": "Create token to forgot password and send email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmailRequest"
              },
              "examples": {
                "Success": {
                  "value": {
                    "email": "johndoe@gmail.com"
                  }
                },
                "Bad request": {
                  "value": {
                    "email": ""
                  }
                },
                "Not found": {
                  "value": {
                    "email": "notdefiened@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success forgot password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Check email for forget password",
                  "status": 200
                }
              }
            }
          },
          "400": {
            "description": "Bad request forgot password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "example": {
                  "message": {
                    "email": "email cannot be blank"
                  },
                  "status": 400
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Account not found",
                  "status": 404
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Authentication"
        ],
        "summary": "Forgot password",
        "description": "Send new password to change password",
        "parameters": [
          {
            "$ref": "#/components/parameters/Token"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": true,
                "properties": {
                  "password": {
                    "type": "string",
                    "nullable": false,
                    "minLength": 8
                  }
                }
              },
              "examples": {
                "Success": {
                  "value": {
                    "password": "anothersecret"
                  }
                },
                "Bad request blank": {
                  "value": {
                    "password": ""
                  }
                },
                "Bad request too short": {
                  "value": {
                    "password": "short"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success change password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Success change password",
                  "status": 200
                }
              }
            }
          },
          "400": {
            "description": "Bad request password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "examples": {
                  "Blank": {
                    "value": {
                      "message": {
                        "password": "password cannot be blank"
                      },
                      "status": 400
                    }
                  },
                  "Too short": {
                    "value": {
                      "message": {
                        "password": "password must longer or equals to 8"
                      },
                      "status": 400
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "value": {
                    "message": "Account not found",
                    "status": 400
                  }
                }
              }
            }
          }
        }
      }
    },
    "/topics": {
      "post": {
        "security": [
          {
            "OnlineTestAuth": [
              "admin"
            ]
          }
        ],
        "tags": [
          "Topic"
        ],
        "summary": "Create new topic",
        "description": "Add new topic",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterRequest"
              },
              "examples": {
                "Success": {
                  "value": {
                    "name": "Database"
                  }
                },
                "Bad request": {
                  "value": {
                    "name": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success created new topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Success created new topic",
                  "status": 201,
                  "data": {
                    "id": 1,
                    "name": "Database"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "example": {
                  "message": {
                    "name": "must not be blank"
                  },
                  "status": 400
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Topic"
        ],
        "summary": "Get topics",
        "description": "Get all topic",
        "responses": {
          "200": {
            "description": "Success get all topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Data found with size 2",
                  "status": 200,
                  "data": [
                    {
                      "id": 1,
                      "name": "Database"
                    },
                    {
                      "id": 2,
                      "name": "Science"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/topics/{topicId}": {
      "put": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Topic"
        ],
        "summary": "Update topic by id",
        "description": "Update topic by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/TopicId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterRequest"
              },
              "examples": {
                "Success": {
                  "value": {
                    "name": "Programming"
                  }
                },
                "Bad request": {
                  "value": {
                    "name": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Success update topic",
                  "status": 200,
                  "data": {
                    "id": 1,
                    "name": "Programming"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request update topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "example": {
                  "message": {
                    "name": "must not be blank"
                  },
                  "status": 400
                }
              }
            }
          },
          "404": {
            "description": "Topic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Topic"
        ],
        "summary": "Delete topic by id",
        "description": "Delete topic by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/TopicId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Success delete data",
                  "status": 200
                }
              }
            }
          },
          "404": {
            "description": "Topic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Topic"
        ],
        "summary": "Get topic by id",
        "description": "Get topic by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/TopicId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get topic",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Data found",
                  "status": 200,
                  "data": {
                    "id": 1,
                    "name": "Database"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Topic not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      }
    },
    "/accesses": {
      "post": {
        "security": [
          {
            "OnlineTestAuth": [
              "admin"
            ]
          }
        ],
        "tags": [
          "Access"
        ],
        "summary": "Create new access",
        "description": "Add new access",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterRequest"
              },
              "examples": {
                "Success": {
                  "value": {
                    "name": "Private"
                  }
                },
                "Bad request": {
                  "value": {
                    "name": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success created new access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Success created new access",
                  "status": 201,
                  "data": {
                    "id": 1,
                    "name": "Private"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "example": {
                  "message": {
                    "name": "must not be blank"
                  },
                  "status": 400
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Access"
        ],
        "summary": "Get accesses",
        "description": "Get all access",
        "responses": {
          "200": {
            "description": "Success get all access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Data found with size 2",
                  "status": 200,
                  "data": [
                    {
                      "id": 1,
                      "name": "Private"
                    },
                    {
                      "id": 2,
                      "name": "Public"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/accesses/{accessId}": {
      "put": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Access"
        ],
        "summary": "Update access by id",
        "description": "Update access by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterRequest"
              },
              "examples": {
                "Success": {
                  "value": {
                    "name": "Protected"
                  }
                },
                "Bad request": {
                  "value": {
                    "name": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Success update access",
                  "status": 200,
                  "data": {
                    "id": 1,
                    "name": "Protected"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request update access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "example": {
                  "message": {
                    "name": "must not be blank"
                  },
                  "status": 400
                }
              }
            }
          },
          "404": {
            "description": "Access not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Access"
        ],
        "summary": "Delete access by id",
        "description": "Delete access by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Success delete data",
                  "status": 200
                }
              }
            }
          },
          "404": {
            "description": "Access not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Access"
        ],
        "summary": "Get access by id",
        "description": "Get access by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/AccessId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Data found",
                  "status": 200,
                  "data": {
                    "id": 1,
                    "name": "Database"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Access not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "post": {
        "security": [
          {
            "OnlineTestAuth": [
              "admin"
            ]
          }
        ],
        "tags": [
          "Role"
        ],
        "summary": "Create new role",
        "description": "Add new role",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterRequest"
              },
              "examples": {
                "Success": {
                  "value": {
                    "name": "Private"
                  }
                },
                "Bad request": {
                  "value": {
                    "name": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success created new role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Success created new role",
                  "status": 201,
                  "data": {
                    "id": 1,
                    "name": "Private"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "example": {
                  "message": {
                    "name": "must not be blank"
                  },
                  "status": 400
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Role"
        ],
        "summary": "Get rolees",
        "description": "Get all role",
        "responses": {
          "200": {
            "description": "Success get all role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Data found with size 2",
                  "status": 200,
                  "data": [
                    {
                      "id": 1,
                      "name": "Private"
                    },
                    {
                      "id": 2,
                      "name": "Public"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/roles/{roleId}": {
      "put": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Role"
        ],
        "summary": "Update role by id",
        "description": "Update role by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/RoleId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterRequest"
              },
              "examples": {
                "Success": {
                  "value": {
                    "name": "Protected"
                  }
                },
                "Bad request": {
                  "value": {
                    "name": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Success update role",
                  "status": 200,
                  "data": {
                    "id": 1,
                    "name": "Protected"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request update role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "example": {
                  "message": {
                    "name": "must not be blank"
                  },
                  "status": 400
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Role"
        ],
        "summary": "Delete role by id",
        "description": "Delete role by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/RoleId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Success delete data",
                  "status": 200
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      },
      "get": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Role"
        ],
        "summary": "Get role by id",
        "description": "Get role by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/RoleId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get role",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Data found",
                  "status": 200,
                  "data": {
                    "id": 1,
                    "name": "Database"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      }
    },
    "/difficulties": {
      "post": {
        "security": [
          {
            "OnlineTestAuth": [
              "admin"
            ]
          }
        ],
        "tags": [
          "Difficulty"
        ],
        "summary": "Create new difficulty",
        "description": "Add new difficulty",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterRequest"
              },
              "examples": {
                "Success": {
                  "value": {
                    "name": "Easy"
                  }
                },
                "Bad request": {
                  "value": {
                    "name": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success created new difficulty",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Success created new difficulty",
                  "status": 201,
                  "data": {
                    "id": 1,
                    "name": "Easy"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "example": {
                  "message": {
                    "name": "must not be blank"
                  },
                  "status": 400
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Difficulty"
        ],
        "summary": "Get difficulties",
        "description": "Get all difficulty",
        "responses": {
          "200": {
            "description": "Success get all difficulty",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Data found with size 2",
                  "status": 200,
                  "data": [
                    {
                      "id": 1,
                      "name": "Easy"
                    },
                    {
                      "id": 2,
                      "name": "Medium"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/difficulties/{difficultyId}": {
      "put": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Difficulty"
        ],
        "summary": "Update difficulty by id",
        "description": "Update difficulty by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/DifficultyId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MasterRequest"
              },
              "examples": {
                "Success": {
                  "value": {
                    "name": "Hard"
                  }
                },
                "Bad request": {
                  "value": {
                    "name": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update difficulty",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Success update difficulty",
                  "status": 200,
                  "data": {
                    "id": 1,
                    "name": "Hard"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request update difficulty",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseObjectWithoutData"
                },
                "example": {
                  "message": {
                    "name": "must not be blank"
                  },
                  "status": 400
                }
              }
            }
          },
          "404": {
            "description": "Difficulty not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "OnlineTestAuth": []
          }
        ],
        "tags": [
          "Difficulty"
        ],
        "summary": "Delete difficulty by id",
        "description": "Delete difficulty by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/DifficultyId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete difficulty",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Success delete data",
                  "status": 200
                }
              }
            }
          },
          "404": {
            "description": "Difficulty not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Difficulty"
        ],
        "summary": "Get difficulty by id",
        "description": "Get difficulty by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/DifficultyId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success get difficulty",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithData"
                },
                "example": {
                  "message": "Data found",
                  "status": 200,
                  "data": {
                    "id": 1,
                    "name": "Database"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Difficulty not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseStringWithoutData"
                },
                "example": {
                  "message": "Data not found",
                  "status": 404
                }
              }
            }
          }
        }
      }
    },
    "/media/{mediaId}" : {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Get media byte by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/StringId"
          }
        ]
      }
    },
    "/media/{mediaId}/download" : {
      "get": {
        "tags": [
          "Media"
        ],
        "summary": "Download media by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/StringId"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "OnlineTestAuth": {
        "description": "Authentication for Online Test RESTful API",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "jwt"
      }
    },
    "parameters": {
      "Token": {
        "name": "token",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        },
        "examples": {
          "Exist": {
            "value": "akjdajkjdhauiqejqe129831ohbjoad"
          },
          "Not exist": {
            "value": ""
          },
          "Not found": {
            "value": "notdefined"
          }
        }
      },
      "TopicId": {
        "name": "topicId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "examples": {
          "Exist": {
            "value": "1"
          },
          "Not found": {
            "value": "-1"
          }
        }
      },
      "AccessId": {
        "name": "accessId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "examples": {
          "Exist": {
            "value": "1"
          },
          "Not found": {
            "value": "-1"
          }
        }
      },
      "RoleId": {
        "name": "roleId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "examples": {
          "Exist": {
            "value": "1"
          },
          "Not found": {
            "value": "-1"
          }
        }
      },
      "DifficultyId": {
        "name": "difficultyId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "integer"
        },
        "examples": {
          "Exist": {
            "value": "1"
          },
          "Not found": {
            "value": "-1"
          }
        }
      },
      "StringId": {
        "name": "stringId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        },
        "examples": {
          "Exist": {
            "value": "example"
          },
          "Not found": {
            "value": "undefined"
          }
        }
      }
    },
    "schemas": {
      "RegisterRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": false
          },
          "email": {
            "type": "string",
            "nullable": false
          },
          "password": {
            "type": "string",
            "nullable": false,
            "minLength": 8
          },
          "retype_password": {
            "type": "string",
            "nullable": false,
            "minLength": 8
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": false
          },
          "password": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "ResponseStringWithoutData": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          }
        }
      },
      "ResponseStringWithData": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "status": {
            "type": "integer"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ResponseObjectWithoutData": {
        "type": "object",
        "properties": {
          "message": {
            "type": "object"
          },
          "status": {
            "type": "integer"
          }
        }
      },
      "EmailRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": false
          }
        }
      },
      "MasterRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": false
          }
        }
      }
    }
  }
}
